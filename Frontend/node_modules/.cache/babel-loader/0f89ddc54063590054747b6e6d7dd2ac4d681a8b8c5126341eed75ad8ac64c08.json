{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\patry\\\\source\\\\repos\\\\react\\\\WideIO_frontend\\\\wideio_front\\\\src\\\\Department.js\";\nimport React, { Component } from \"react\";\nimport { variables } from \"./Variables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Department extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forecasts: [],\n      loading: true\n    };\n  }\n  /*refreshList(){\r\n      fetch(variables.API_URL + 'WeatherForecast')\r\n      .then(response => response.json())\r\n      .then(data =>{\r\n          this.setState({forecasts: data, loading: false})\r\n      })\r\n  }*/\n  refreshList() {\n    fetch(variables.API_URL + 'WeatherForecast').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      this.setState({\n        forecasts: data,\n        loading: false\n      });\n    }).catch(error => {\n      console.error('There was a problem fetching the data:', error);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n  componentDidMount() {\n    this.refreshList();\n  }\n  static renderForecastsTable(forecasts) {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temp. (C)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Temp. (F)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: forecasts.map(forecast => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperatureC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.temperatureF\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: forecast.summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)]\n        }, forecast.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this);\n  }\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"em\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : Department.renderForecastsTable(this.state.forecasts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is department page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"Weather forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This component demonstrates fetching data from the server.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), contents]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","variables","jsxDEV","_jsxDEV","Department","constructor","props","state","forecasts","loading","refreshList","fetch","API_URL","then","response","ok","Error","json","data","setState","catch","error","console","componentDidMount","renderForecastsTable","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","forecast","date","temperatureC","temperatureF","summary","render","contents","id"],"sources":["C:/Users/patry/source/repos/react/WideIO_frontend/wideio_front/src/Department.js"],"sourcesContent":["import React, {Component} from \"react\";\r\nimport { variables } from \"./Variables\";\r\n\r\nexport class Department extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { forecasts: [], loading: true };\r\n      }\r\n    /*refreshList(){\r\n        fetch(variables.API_URL + 'WeatherForecast')\r\n        .then(response => response.json())\r\n        .then(data =>{\r\n            this.setState({forecasts: data, loading: false})\r\n        })\r\n    }*/\r\n    refreshList() {\r\n        fetch(variables.API_URL + 'WeatherForecast')\r\n          .then(response => {\r\n            if (!response.ok) {\r\n              throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n          })\r\n          .then(data => {\r\n            this.setState({forecasts: data, loading: false});\r\n          })\r\n          .catch(error => {\r\n            console.error('There was a problem fetching the data:', error);\r\n            this.setState({loading: false});\r\n          });\r\n      }\r\n    componentDidMount(){\r\n        this.refreshList();\r\n    }\r\n    static renderForecastsTable(forecasts) {\r\n        return (\r\n          <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Temp. (C)</th>\r\n                <th>Temp. (F)</th>\r\n                <th>Summary</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {forecasts.map(forecast =>\r\n                <tr key={forecast.date}>\r\n                  <td>{forecast.date}</td>\r\n                  <td>{forecast.temperatureC}</td>\r\n                  <td>{forecast.temperatureF}</td>\r\n                  <td>{forecast.summary}</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        );\r\n      }\r\n    render(){\r\n        let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : Department.renderForecastsTable(this.state.forecasts);\r\n        return(\r\n            <div>\r\n                <h3>This is department page</h3>\r\n                <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n                <p>This component demonstrates fetching data from the server.</p>\r\n                {contents}\r\n            </div>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}