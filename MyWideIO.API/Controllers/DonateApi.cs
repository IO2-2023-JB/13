/*
 * VideIO API
 *
 * VideIO project API specification.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using WideIO.API.Attributes;
using WideIO.API.Models;

namespace WideIO.API.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DonateApiController : ControllerBase
    { 
        /// <summary>
        /// Add funds to account
        /// </summary>
        /// <param name="amount">Amount of money to add to account</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        [HttpPost]
        [Route("/zagorskim/VideIO/1.0.0/donate/topup")]
        [ValidateModelState]
        [SwaggerOperation("BuyFunds")]
        public virtual IActionResult BuyFunds([FromQuery (Name = "amount")][Required()]decimal amount)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get the current account balance
        /// </summary>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        [HttpGet]
        [Route("/zagorskim/VideIO/1.0.0/donate/balance")]
        [ValidateModelState]
        [SwaggerOperation("GetBalance")]
        [SwaggerResponse(statusCode: 200, type: typeof(decimal), description: "OK")]
        public virtual IActionResult GetBalance()
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(decimal));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<decimal>(exampleJson)
            : default(decimal);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Send a donation
        /// </summary>
        /// <param name="id">ID of the recipient of the donation</param>
        /// <param name="amount">Amount of money to send</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        [HttpPost]
        [Route("/zagorskim/VideIO/1.0.0/donate/send")]
        [ValidateModelState]
        [SwaggerOperation("SendDonation")]
        public virtual IActionResult SendDonation([FromQuery (Name = "id")][Required()]Guid id, [FromQuery (Name = "amount")][Required()]decimal amount)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            throw new NotImplementedException();
        }

        /// <summary>
        /// Request a withdrawal from account
        /// </summary>
        /// <param name="amount">Amount of money to send</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        [HttpPost]
        [Route("/zagorskim/VideIO/1.0.0/donate/withdraw")]
        [ValidateModelState]
        [SwaggerOperation("WithdrawFunds")]
        public virtual IActionResult WithdrawFunds([FromQuery (Name = "amount")][Required()]decimal amount)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);

            throw new NotImplementedException();
        }
    }
}
