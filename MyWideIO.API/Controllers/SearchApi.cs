/*
 * VideIO API
 *
 * VideIO project API specification.
 *
 * The version of the OpenAPI document: 1.0.6
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using WideIO.API.Attributes;
using WideIO.API.Models;

namespace WideIO.API.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SearchApiController : ControllerBase
    { 
        /// <summary>
        /// Get search results
        /// </summary>
        /// <param name="query">Search query</param>
        /// <param name="sortingCriterion">Sorting criterion</param>
        /// <param name="sortingType">Sort direction</param>
        /// <param name="beginDate">Begin date filtering</param>
        /// <param name="endDate">End date filtering</param>
        /// <response code="200">OK</response>
        /// <response code="400">Bad request</response>
        /// <response code="401">Unauthorized</response>
        [HttpGet]
        [Route("/zagorskim/VideIO/1.0.0/search")]
        [ValidateModelState]
        [SwaggerOperation("GetSearchResults")]
        [SwaggerResponse(statusCode: 200, type: typeof(SearchResultsDto), description: "OK")]
        public virtual IActionResult GetSearchResults([FromQuery (Name = "query")][Required()]string query, [FromQuery (Name = "sortingCriterion")][Required()]SortingTypes sortingCriterion, [FromQuery (Name = "sortingType")][Required()]SortingDirections sortingType, [FromQuery (Name = "beginDate")]DateTime? beginDate, [FromQuery (Name = "endDate")]DateTime? endDate)
        {

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SearchResultsDto));
            //TODO: Uncomment the next line to return response 400 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(400);
            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);
            string exampleJson = null;
            exampleJson = "{\r\n  \"playlists\" : [ {\r\n    \"name\" : \"Favorites\",\r\n    \"count\" : 25,\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\"\r\n  }, {\r\n    \"name\" : \"Favorites\",\r\n    \"count\" : 25,\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\"\r\n  } ],\r\n  \"videos\" : [ {\r\n    \"thumbnail\" : \"https://example.com/thumbnail/video-id\",\r\n    \"description\" : \"I'll teach you how to wash your dishes! All you need is a sponge and dishwashing soap\",\r\n    \"title\" : \"How to wash dishes\",\r\n    \"authorId\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"authorNickname\" : \"john.doe123\",\r\n    \"editDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"tags\" : [ \"tags\", \"tags\" ],\r\n    \"duration\" : \"743\",\r\n    \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"viewCount\" : 1234503\r\n  }, {\r\n    \"thumbnail\" : \"https://example.com/thumbnail/video-id\",\r\n    \"description\" : \"I'll teach you how to wash your dishes! All you need is a sponge and dishwashing soap\",\r\n    \"title\" : \"How to wash dishes\",\r\n    \"authorId\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"authorNickname\" : \"john.doe123\",\r\n    \"editDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"tags\" : [ \"tags\", \"tags\" ],\r\n    \"duration\" : \"743\",\r\n    \"uploadDate\" : \"2000-01-23T04:56:07.000+00:00\",\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"viewCount\" : 1234503\r\n  } ],\r\n  \"users\" : [ {\r\n    \"surname\" : \"Doe\",\r\n    \"avatarImage\" : \"https://example.com/avatar/user-id\",\r\n    \"nickname\" : \"johnny123\",\r\n    \"name\" : \"John\",\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"accountBalance\" : 0.8008281904610115,\r\n    \"subscriptionsCount\" : 6,\r\n    \"email\" : \"john.doe@mail.com\"\r\n  }, {\r\n    \"surname\" : \"Doe\",\r\n    \"avatarImage\" : \"https://example.com/avatar/user-id\",\r\n    \"nickname\" : \"johnny123\",\r\n    \"name\" : \"John\",\r\n    \"id\" : \"123e4567-e89b-12d3-a456-426614174000\",\r\n    \"accountBalance\" : 0.8008281904610115,\r\n    \"subscriptionsCount\" : 6,\r\n    \"email\" : \"john.doe@mail.com\"\r\n  } ]\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SearchResultsDto>(exampleJson)
            : default(SearchResultsDto);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
